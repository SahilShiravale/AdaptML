# Stage 1: Build stage
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json first for better layer caching
COPY frontend/package.json frontend/package-lock.json* ./

# Install all dependencies (including dev dependencies)
RUN npm ci

# Copy the rest of the application code
COPY frontend/ ./

# Build the Next.js application
RUN npm run build

# Stage 2: Production stage
FROM node:18-alpine AS runner

# Set working directory
WORKDIR /app

# Set environment to production
ENV NODE_ENV=production

# Create a non-root user to run the application
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs && \
    chown -R nextjs:nodejs /app

# Copy only the necessary files from the builder stage
COPY --from=builder --chown=nextjs:nodejs /app/package.json /app/package-lock.json* ./
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder --chown=nextjs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nextjs:nodejs /app/next.config.js ./

# Expose the port that Next.js runs on (default is 3000)
EXPOSE 3000

# Set environment variables for API endpoints
# These can be overridden at runtime
ENV NEXT_PUBLIC_API_URL=http://backend:8000/api
ENV NEXT_PUBLIC_WS_URL=ws://backend:8000/ws

# Switch to non-root user
USER nextjs

# Start the Next.js application
CMD ["npm", "start"]
